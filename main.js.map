{"version":3,"file":"main.js","mappings":"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","sources":["webpack://dnd.ahj/./src/js/TaskManagerMarkups.js","webpack://dnd.ahj/./src/js/TaskManager.js","webpack://dnd.ahj/./src/js/app.js","webpack://dnd.ahj/./src/js/DragAndDrop.js"],"sourcesContent":["export default class TaskManagerMarkups {\n  constructor(container) {\n    this.container = container;\n  }\n\n  static get mainMarkup() {\n    return `\n      <div class=\"tasklist\">\n        <div class=\"tasklist__bar\">\n          <h3 class=\"tasklist__header\">todo</h3>\n          <ul class=\"tasklist__todo tasklist__list\"></ul>\n          <div class=\"tasklist__footer\">\n            <span class=\"tasklist__add-task\">+ add new task</span>\n          </div>\n        </div>\n        <div class=\"tasklist__bar\">\n          <h3 class=\"tasklist__header\">in progress</h3>\n          <ul class=\"tasklist__in-progress tasklist__list\"></ul>\n          <div class=\"tasklist__footer\">\n            <span class=\"tasklist__add-task\">+ add new task</span>\n          </div>\n        </div>\n        <div class=\"tasklist__bar\">\n          <h3 class=\"tasklist__header\">done</h3>\n          <ul class=\"tasklist__done tasklist__list\"></ul>\n          <div class=\"tasklist__footer\">\n            <span class=\"tasklist__add-task\">+ add new task</span>\n          </div>\n        </div>\n      </div>\n      `;\n  }\n\n  render() {\n    this.container.insertAdjacentHTML(\"beforeend\", this.constructor.mainMarkup);\n  }\n\n  static addTaskBlock() {\n    const block = document.createElement(\"div\");\n    block.classList.add(\"tasklist__add-task-block\");\n\n    const textarea = document.createElement(\"textarea\");\n    textarea.classList.add(\"tasklist__task-input\");\n    textarea.placeholder = \"Введите текст задачи...\";\n\n    const addButton = document.createElement(\"button\");\n    addButton.classList.add(\"tasklist__task-add-button\");\n    addButton.textContent = \"Добавить задачу\";\n\n    const cancelButton = document.createElement(\"span\");\n    cancelButton.classList.add(\"tasklist__task-cancel-button\");\n    cancelButton.textContent = \"×\";\n\n    block.appendChild(textarea);\n    block.appendChild(addButton);\n    block.appendChild(cancelButton);\n\n    return block;\n  }\n\n  static taskBlock(input) {\n    const task = document.createElement(\"div\");\n    task.classList.add(\"tasklist__task\");\n    task.textContent = input;\n\n    const deleteButton = document.createElement(\"span\");\n    deleteButton.classList.add(\"tasklist__task-delete-btn\", \"hidden\");\n    deleteButton.textContent = \"\\u00D7\";\n    task.appendChild(deleteButton);\n\n    return task;\n  }\n}\n","/* eslint-disable default-case */\nimport TaskManagerMarkups from \"./TaskManagerMarkups\";\n\nexport default class TaskManager {\n  constructor(markups) {\n    this.markups = markups;\n    try {\n      this.storage = JSON.parse(localStorage.getItem(\"tasklist\"));\n    } catch (e) {\n      this.storage = null;\n    }\n    this.todoTasks = null;\n    this.inProgressTasks = null;\n    this.doneTasks = null;\n  }\n\n  init() {\n    this.markups.render();\n    document.addEventListener(\"click\", this.constructor.onClick.bind(this));\n\n    const todoList = document.querySelector(\".tasklist__todo\");\n    const inProgressList = document.querySelector(\".tasklist__in-progress\");\n    const doneList = document.querySelector(\".tasklist__done\");\n\n    if (this.storage !== null) {\n      for (const list in this.storage) {\n        if (this.storage[list].length !== 0) {\n          this.storage[list].forEach((task) => {\n            const taskBlock = TaskManagerMarkups.taskBlock(task);\n            switch (list) {\n              case \"todoList\":\n                todoList.appendChild(taskBlock);\n                break;\n              case \"inProgressList\":\n                inProgressList.appendChild(taskBlock);\n                break;\n              case \"doneList\":\n                doneList.appendChild(taskBlock);\n                break;\n            }\n          });\n        }\n      }\n    }\n\n    this.todoTasks = document\n      .querySelector(\".tasklist__todo\")\n      .getElementsByClassName(\"tasklist__task\");\n    this.inProgressTasks = document\n      .querySelector(\".tasklist__in-progress\")\n      .getElementsByClassName(\"tasklist__task\");\n    this.doneTasks = document\n      .querySelector(\".tasklist__done\")\n      .getElementsByClassName(\"tasklist__task\");\n  }\n\n  static onClick(event) {\n    if (event.target.classList.contains(\"tasklist__add-task\")) {\n      this.constructor.showAddTaskBlock(event);\n    } else if (\n      event.target.classList.contains(\"tasklist__task-cancel-button\")\n    ) {\n      this.constructor.hideAddTaskBlock(event);\n    } else if (event.target.classList.contains(\"tasklist__task-add-button\")) {\n      this.addTask(event);\n    } else if (event.target.classList.contains(\"tasklist__task-delete-btn\")) {\n      this.removeTask(event);\n    }\n  }\n\n  static showAddTaskBlock(event) {\n    event.target.classList.add(\"hidden\");\n    event.target\n      .closest(\".tasklist__footer\")\n      .appendChild(TaskManagerMarkups.addTaskBlock());\n  }\n\n  static hideAddTaskBlock(event) {\n    event.target\n      .closest(\".tasklist__footer\")\n      .querySelector(\".tasklist__add-task\")\n      .classList.remove(\"hidden\");\n    event.target.closest(\".tasklist__add-task-block\").remove();\n  }\n\n  addTask(event) {\n    const targetInput = event.target\n      .closest(\".tasklist__add-task-block\")\n      .querySelector(\".tasklist__task-input\");\n    const { value } = targetInput;\n    if (value.length === 0) {\n      targetInput.style.borderColor = \"red\";\n      targetInput.blur();\n      return;\n    }\n    const task = TaskManagerMarkups.taskBlock(value);\n    const tasklist = event.target\n      .closest(\".tasklist__bar\")\n      .querySelector(\".tasklist__list\");\n    tasklist.appendChild(task);\n\n    const hidden = event.target\n      .closest(\".tasklist__footer\")\n      .querySelector(\".tasklist__add-task\");\n    hidden.classList.remove(\"hidden\");\n    event.target.closest(\".tasklist__add-task-block\").remove();\n    this.constructor.saveTaskList(\n      this.todoTasks,\n      this.inProgressTasks,\n      this.doneTasks\n    );\n  }\n\n  removeTask(event) {\n    event.target.closest(\".tasklist__task\").remove();\n    this.constructor.saveTaskList(\n      this.todoTasks,\n      this.inProgressTasks,\n      this.doneTasks\n    );\n  }\n\n  static saveTaskList(todo, inProgress, done) {\n    const todoList = [];\n    const inProgressList = [];\n    const doneList = [];\n    [...todo].forEach((task) => todoList.push(task.textContent.slice(0, -1)));\n    [...inProgress].forEach((task) =>\n      inProgressList.push(task.textContent.slice(0, -1))\n    );\n    [...done].forEach((task) => doneList.push(task.textContent.slice(0, -1)));\n\n    const objToSave = JSON.stringify({ todoList, inProgressList, doneList });\n    localStorage.setItem(\"tasklist\", objToSave);\n  }\n}\n","import DragAndDrop from \"./DragAndDrop\";\nimport TaskManager from \"./TaskManager\";\nimport TaskManagerMarkups from \"./TaskManagerMarkups\";\n\nconst container = document.querySelector(\".container\");\nconst markups = new TaskManagerMarkups(container);\nconst taskManager = new TaskManager(markups);\nconst dnd = new DragAndDrop();\n\ntaskManager.init();\ndnd.init();\n","import TaskManager from \"./TaskManager\";\n\nexport default class DragAndDrop {\n  constructor() {\n    this.draggedElement = null;\n    this.ghostElement = null;\n    this.dropPoint = null;\n\n    this.onMousedown = this.onMousedown.bind(this);\n    this.onMousemove = this.onMousemove.bind(this);\n    this.onMouseleave = this.onMouseleave.bind(this);\n    this.onMouseup = this.onMouseup.bind(this);\n\n    this.shiftX = null;\n    this.shiftY = null;\n  }\n\n  init() {\n    document.addEventListener(\"mousedown\", this.onMousedown);\n    document.addEventListener(\"mousemove\", this.onMousemove);\n    document.addEventListener(\"mouseleave\", this.onMouseleave);\n    document.addEventListener(\"mouseup\", this.onMouseup);\n  }\n\n  onMousedown(event) {\n    if (!event.target.classList.contains(\"tasklist__task\")) {\n      return;\n    }\n    this.draggedElement = event.target;\n    this.ghostElement = event.target.cloneNode(true);\n    this.ghostElement.classList.add(\"dragged\");\n    document.body.appendChild(this.ghostElement);\n    this.shiftX =\n      event.pageX - this.draggedElement.getBoundingClientRect().left;\n    this.shiftY = event.pageY - this.draggedElement.getBoundingClientRect().top;\n    this.moveAt(event.pageX, event.pageY);\n  }\n\n  onMousemove(event) {\n    if (\n      event.clientX <= 0 ||\n      event.clientY <= 0 ||\n      event.clientX >= window.innerWidth ||\n      event.clientY >= window.innerHeight\n    ) {\n      this.onMouseleave(event);\n    }\n    if (!event.target.classList.contains(\"tasklist__task-input\")) {\n      event.preventDefault();\n    }\n    if (!this.draggedElement) {\n      return;\n    }\n\n    this.draggedElement.classList.add(\"hidden\");\n\n    const closest = document.elementFromPoint(event.clientX, event.clientY);\n    this.moveAt(event.pageX, event.pageY);\n    this.showDropPoint(closest, event);\n\n    if (\n      !closest.classList.contains(\"tasklist__task\") &&\n      !closest.classList.contains(\"tasklist__list\") &&\n      !closest.classList.contains(\"drop-point\") &&\n      this.dropPoint !== null\n    ) {\n      this.dropPoint.remove();\n      this.dropPoint = null;\n    }\n  }\n\n  onMouseleave() {\n    if (!this.draggedElement) {\n      return;\n    }\n    this.draggedElement.classList.remove(\"hidden\");\n    this.ghostElement.remove();\n    this.ghostElement = null;\n    this.draggedElement = null;\n    if (this.dropPoint) {\n      this.dropPoint.remove();\n      this.dropPoint = null;\n    }\n  }\n\n  onMouseup(event) {\n    if (!this.draggedElement) {\n      return;\n    }\n    const closest = document.elementFromPoint(event.clientX, event.clientY);\n    if (\n      !closest.classList.contains(\"tasklist__task\") &&\n      !closest.classList.contains(\"tasklist__list\") &&\n      !this.dropPoint\n    ) {\n      this.onMouseleave();\n      return;\n    }\n\n    this.draggedElement.classList.remove(\"hidden\");\n\n    const closestParent = closest.closest(\".tasklist__list\");\n    closestParent.appendChild(this.draggedElement);\n    closestParent.insertBefore(this.draggedElement, this.dropPoint);\n\n    this.ghostElement.remove();\n    this.ghostElement = null;\n    this.draggedElement = null;\n    if (this.dropPoint) {\n      this.dropPoint.remove();\n      this.dropPoint = null;\n    }\n\n    const todoTasks = document\n      .querySelector(\".tasklist__todo\")\n      .getElementsByClassName(\"tasklist__task\");\n    const inProgressTasks = document\n      .querySelector(\".tasklist__in-progress\")\n      .getElementsByClassName(\"tasklist__task\");\n    const doneTasks = document\n      .querySelector(\".tasklist__done\")\n      .getElementsByClassName(\"tasklist__task\");\n    TaskManager.saveTaskList(todoTasks, inProgressTasks, doneTasks);\n  }\n\n  moveAt(pageX, pageY) {\n    this.ghostElement.style.left = `${pageX - this.shiftX}px`;\n    this.ghostElement.style.top = `${pageY - this.shiftY}px`;\n  }\n\n  showDropPoint(closest, event) {\n    if (\n      !closest.classList.contains(\"tasklist__task\") &&\n      !closest.classList.contains(\"tasklist__list\")\n    ) {\n      return;\n    }\n    if (this.dropPoint) {\n      this.dropPoint.remove();\n      this.dropPoint = null;\n    }\n\n    this.dropPoint = document.createElement(\"div\");\n    this.dropPoint.classList.add(\"drop-point\");\n    const height = this.ghostElement.offsetHeight;\n    this.dropPoint.style.height = `${height}px`;\n\n    if (closest.classList.contains(\"tasklist__list\")) {\n      closest.appendChild(this.dropPoint);\n    } else if (closest.classList.contains(\"tasklist__task\")) {\n      const { top } = closest.getBoundingClientRect();\n      const closestParent = closest.closest(\".tasklist__list\");\n      if (event.pageY > window.scrollY + top + closest.offsetHeight / 2) {\n        closestParent.insertBefore(this.dropPoint, closest.nextElementSibling);\n      } else {\n        closestParent.insertBefore(this.dropPoint, closest);\n      }\n    }\n  }\n}\n"],"names":["TaskManagerMarkups","constructor","container","this","mainMarkup","render","insertAdjacentHTML","static","block","document","createElement","classList","add","textarea","placeholder","addButton","textContent","cancelButton","appendChild","input","task","deleteButton","TaskManager","markups","storage","JSON","parse","localStorage","getItem","e","todoTasks","inProgressTasks","doneTasks","init","addEventListener","onClick","bind","todoList","querySelector","inProgressList","doneList","list","length","forEach","taskBlock","getElementsByClassName","event","target","contains","showAddTaskBlock","hideAddTaskBlock","addTask","removeTask","closest","addTaskBlock","remove","targetInput","value","style","borderColor","blur","saveTaskList","todo","inProgress","done","push","slice","objToSave","stringify","setItem","taskManager","dnd","draggedElement","ghostElement","dropPoint","onMousedown","onMousemove","onMouseleave","onMouseup","shiftX","shiftY","cloneNode","body","pageX","getBoundingClientRect","left","pageY","top","moveAt","clientX","clientY","window","innerWidth","innerHeight","preventDefault","elementFromPoint","showDropPoint","closestParent","insertBefore","height","offsetHeight","scrollY","nextElementSibling"],"sourceRoot":""}