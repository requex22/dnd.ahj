!function(){"use strict";class t{constructor(t){this.container=t}static get mainMarkup(){return'\n      <div class="tasklist">\n        <div class="tasklist__bar">\n          <h3 class="tasklist__header">todo</h3>\n          <ul class="tasklist__todo tasklist__list"></ul>\n          <div class="tasklist__footer">\n            <span class="tasklist__add-task">+ add new task</span>\n          </div>\n        </div>\n        <div class="tasklist__bar">\n          <h3 class="tasklist__header">in progress</h3>\n          <ul class="tasklist__in-progress tasklist__list"></ul>\n          <div class="tasklist__footer">\n            <span class="tasklist__add-task">+ add new task</span>\n          </div>\n        </div>\n        <div class="tasklist__bar">\n          <h3 class="tasklist__header">done</h3>\n          <ul class="tasklist__done tasklist__list"></ul>\n          <div class="tasklist__footer">\n            <span class="tasklist__add-task">+ add new task</span>\n          </div>\n        </div>\n      </div>\n      '}render(){this.container.insertAdjacentHTML("beforeend",this.constructor.mainMarkup)}static addTaskBlock(){const t=document.createElement("div");t.classList.add("tasklist__add-task-block");const s=document.createElement("textarea");s.classList.add("tasklist__task-input"),s.placeholder="Введите текст задачи...";const e=document.createElement("button");e.classList.add("tasklist__task-add-button"),e.textContent="Добавить задачу";const i=document.createElement("span");return i.classList.add("tasklist__task-cancel-button"),i.textContent="×",t.appendChild(s),t.appendChild(e),t.appendChild(i),t}static taskBlock(t){const s=document.createElement("div");s.classList.add("tasklist__task"),s.textContent=t;const e=document.createElement("span");return e.classList.add("tasklist__task-delete-btn","hidden"),e.textContent="×",s.appendChild(e),s}}class s{constructor(t){this.markups=t;try{this.storage=JSON.parse(localStorage.getItem("tasklist"))}catch(t){this.storage=null}this.todoTasks=null,this.inProgressTasks=null,this.doneTasks=null}init(){this.markups.render(),document.addEventListener("click",this.constructor.onClick.bind(this));const s=document.querySelector(".tasklist__todo"),e=document.querySelector(".tasklist__in-progress"),i=document.querySelector(".tasklist__done");if(null!==this.storage)for(const n in this.storage)0!==this.storage[n].length&&this.storage[n].forEach((a=>{const o=t.taskBlock(a);switch(n){case"todoList":s.appendChild(o);break;case"inProgressList":e.appendChild(o);break;case"doneList":i.appendChild(o)}}));this.todoTasks=document.querySelector(".tasklist__todo").getElementsByClassName("tasklist__task"),this.inProgressTasks=document.querySelector(".tasklist__in-progress").getElementsByClassName("tasklist__task"),this.doneTasks=document.querySelector(".tasklist__done").getElementsByClassName("tasklist__task")}static onClick(t){t.target.classList.contains("tasklist__add-task")?this.constructor.showAddTaskBlock(t):t.target.classList.contains("tasklist__task-cancel-button")?this.constructor.hideAddTaskBlock(t):t.target.classList.contains("tasklist__task-add-button")?this.addTask(t):t.target.classList.contains("tasklist__task-delete-btn")&&this.removeTask(t)}static showAddTaskBlock(s){s.target.classList.add("hidden"),s.target.closest(".tasklist__footer").appendChild(t.addTaskBlock())}static hideAddTaskBlock(t){t.target.closest(".tasklist__footer").querySelector(".tasklist__add-task").classList.remove("hidden"),t.target.closest(".tasklist__add-task-block").remove()}addTask(s){const e=s.target.closest(".tasklist__add-task-block").querySelector(".tasklist__task-input"),{value:i}=e;if(0===i.length)return e.style.borderColor="red",void e.blur();const n=t.taskBlock(i);s.target.closest(".tasklist__bar").querySelector(".tasklist__list").appendChild(n),s.target.closest(".tasklist__footer").querySelector(".tasklist__add-task").classList.remove("hidden"),s.target.closest(".tasklist__add-task-block").remove(),this.constructor.saveTaskList(this.todoTasks,this.inProgressTasks,this.doneTasks)}removeTask(t){t.target.closest(".tasklist__task").remove(),this.constructor.saveTaskList(this.todoTasks,this.inProgressTasks,this.doneTasks)}static saveTaskList(t,s,e){const i=[],n=[],a=[];[...t].forEach((t=>i.push(t.textContent.slice(0,-1)))),[...s].forEach((t=>n.push(t.textContent.slice(0,-1)))),[...e].forEach((t=>a.push(t.textContent.slice(0,-1))));const o=JSON.stringify({todoList:i,inProgressList:n,doneList:a});localStorage.setItem("tasklist",o)}}const e=document.querySelector(".container"),i=new t(e),n=new s(i),a=new class{constructor(){this.draggedElement=null,this.ghostElement=null,this.dropPoint=null,this.onMousedown=this.onMousedown.bind(this),this.onMousemove=this.onMousemove.bind(this),this.onMouseleave=this.onMouseleave.bind(this),this.onMouseup=this.onMouseup.bind(this),this.shiftX=null,this.shiftY=null}init(){document.addEventListener("mousedown",this.onMousedown),document.addEventListener("mousemove",this.onMousemove),document.addEventListener("mouseleave",this.onMouseleave),document.addEventListener("mouseup",this.onMouseup)}onMousedown(t){t.target.classList.contains("tasklist__task")&&(this.draggedElement=t.target,this.ghostElement=t.target.cloneNode(!0),this.ghostElement.classList.add("dragged"),document.body.appendChild(this.ghostElement),this.shiftX=t.pageX-this.draggedElement.getBoundingClientRect().left,this.shiftY=t.pageY-this.draggedElement.getBoundingClientRect().top,this.moveAt(t.pageX,t.pageY))}onMousemove(t){if((t.clientX<=0||t.clientY<=0||t.clientX>=window.innerWidth||t.clientY>=window.innerHeight)&&this.onMouseleave(t),t.target.classList.contains("tasklist__task-input")||t.preventDefault(),!this.draggedElement)return;this.draggedElement.classList.add("hidden");const s=document.elementFromPoint(t.clientX,t.clientY);this.moveAt(t.pageX,t.pageY),this.showDropPoint(s,t),s.classList.contains("tasklist__task")||s.classList.contains("tasklist__list")||s.classList.contains("drop-point")||null===this.dropPoint||(this.dropPoint.remove(),this.dropPoint=null)}onMouseleave(){this.draggedElement&&(this.draggedElement.classList.remove("hidden"),this.ghostElement.remove(),this.ghostElement=null,this.draggedElement=null,this.dropPoint&&(this.dropPoint.remove(),this.dropPoint=null))}onMouseup(t){if(!this.draggedElement)return;const e=document.elementFromPoint(t.clientX,t.clientY);if(!e.classList.contains("tasklist__task")&&!e.classList.contains("tasklist__list")&&!this.dropPoint)return void this.onMouseleave();this.draggedElement.classList.remove("hidden");const i=e.closest(".tasklist__list");i.appendChild(this.draggedElement),i.insertBefore(this.draggedElement,this.dropPoint),this.ghostElement.remove(),this.ghostElement=null,this.draggedElement=null,this.dropPoint&&(this.dropPoint.remove(),this.dropPoint=null);const n=document.querySelector(".tasklist__todo").getElementsByClassName("tasklist__task"),a=document.querySelector(".tasklist__in-progress").getElementsByClassName("tasklist__task"),o=document.querySelector(".tasklist__done").getElementsByClassName("tasklist__task");s.saveTaskList(n,a,o)}moveAt(t,s){this.ghostElement.style.left=t-this.shiftX+"px",this.ghostElement.style.top=s-this.shiftY+"px"}showDropPoint(t,s){if(!t.classList.contains("tasklist__task")&&!t.classList.contains("tasklist__list"))return;this.dropPoint&&(this.dropPoint.remove(),this.dropPoint=null),this.dropPoint=document.createElement("div"),this.dropPoint.classList.add("drop-point");const e=this.ghostElement.offsetHeight;if(this.dropPoint.style.height=`${e}px`,t.classList.contains("tasklist__list"))t.appendChild(this.dropPoint);else if(t.classList.contains("tasklist__task")){const{top:e}=t.getBoundingClientRect(),i=t.closest(".tasklist__list");s.pageY>window.scrollY+e+t.offsetHeight/2?i.insertBefore(this.dropPoint,t.nextElementSibling):i.insertBefore(this.dropPoint,t)}}};n.init(),a.init()}();
//# sourceMappingURL=main.js.map